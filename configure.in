# AC_INIT(src/sendsms.c)
VERSION=0.1
AC_INIT([sendsms], [0.1])
AC_CONFIG_SRCDIR([src/sendsms.c])
AC_CONFIG_SRCDIR([gui/gsendsms.c])
PACKAGE=sendsms

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

INTI_REQUIRED_VERSION=1.0.7

AC_PROG_CC

# Check CURL, needed for remote monitoring
CURL_LIBS=
PKG_CHECK_MODULES(CURL,
  libcurl,
  [AC_DEFINE([HAVE_CURL],[1],[Use CURL])],
  [AC_MSG_ERROR("libcurl is required install libcurl-dev")])
AM_CONDITIONAL(CURL, test -n "$CURL_LIBS")
AC_SUBST(CURL_CFLAGS)
AC_SUBST(CURL_LIBS)

AC_ARG_ENABLE(debug,
AS_HELP_STRING([--enable-debug],
               [enable debugging, default: no]),
[case "${enableval}" in
             yes) debug=true ;;
             no)  debug=false ;;
             *)   AC_MSG_ERROR([bad value ${enableval} for --enable-debug]) ;;
esac],
[debug=false])

AM_CONDITIONAL(DEBUG, test x"$debug" = x"true")

AC_ARG_ENABLE(gui,
AS_HELP_STRING([--enable-gui],
               [enable gui, default: no]),
[case "${enableval}" in
             yes) gui=true ;;
             no)  gui=false ;;
             *)   AC_MSG_ERROR([bad value ${enableval} for --enable-gui]) ;;
esac],
[gui=false])

AM_CONDITIONAL(DEBUG, test x"$debug" = x"true")
AM_CONDITIONAL(ENABLE_GUI, test x"$gui" = x"true")


PKG_CHECK_MODULES(GLIB, glib-2.0 >=  2.2.0, HAVE_GLIB="yes")
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)


if test x"$gui" = x"true"
then
PKG_CHECK_MODULES(GTK, gtk+-3.0 >= 3.4)
else
GTK_LIBS=
fi	
AM_CONDITIONAL(GUI, test -n "$GTK_LIBS")
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)



AM_MAINTAINER_MODE


AC_CONFIG_HEADERS([config.h])

CPPFLAGS="$CPPFLAGS "'-DSYSCONFDIR="$(sysconfdir)"'
CPPFLAGS="$CPPFLAGS "'-DDATADIR="$(datadir)"'

AC_OUTPUT(Makefile src/Makefile gui/Makefile)
